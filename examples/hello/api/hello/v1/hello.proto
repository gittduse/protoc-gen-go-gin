syntax = "proto3";

// protoc -I=./third_party/ -I ./api  --go_out=./api --go_opt=paths=source_relative api/hello/v1/hello.proto
// protoc -I=./third_party/ -I ./api  --go-gin_out=./api --go-gin_opt=paths=source_relative api/hello/v1/hello.proto
// protoc -I=./third_party/ -I ./api  --go-grpc_out=./api --go-grpc_opt=paths=source_relative api/hello/v1/hello.proto
package gg.example.hello.v1;

import "google/api/annotations.proto";

option go_package = "github.com/gittduse/protoc-gen-go-gin/examples/hello/api/hello/v1";

service HelloService {
  rpc GetHello (GetHelloRequest) returns (GetHelloReply)  {
    option (google.api.http) = {
      get: "/v1/hello/{name}"
      additional_bindings {
        get: "/v1/hello_world/{name}"
      }
    };
  }
  rpc PostHello (PostHelloRequest) returns (PostHelloReply)  {
    option (google.api.http) = {
      post: "/v1/hello",
      body: "*"
    };
  }
}
message GetHelloRequest {
  string name = 1;
}


message GetHelloReply {
  string message = 1;
}

message PostHelloRequest {
  string name = 1;
}
message  PostHelloReply {
  string name = 1;
}